name: "Fly CI"

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Setup Flyctl
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Setup WordPress source code
        shell: pwsh
        run: |
          $extensions = @{ plugins = '${{ secrets.WORDPRESS_PLUGINS }}'; themes = '${{ secrets.WORDPRESS_THEMES }}' }
          $wordpress = Invoke-RestMethod -Uri 'https://api.wordpress.org/core/version-check/1.7/'
          Invoke-WebRequest -OutFile '/tmp/wordpress.zip' $wordpress.offers[0].download
          Expand-Archive -DestinationPath '.' -Path '/tmp/wordpress.zip'
          Set-Location -Path 'wordpress'
          Set-Content -Path '.htaccess' -Value @'
          RewriteEngine On
          RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
          RewriteBase /
          RewriteRule ^index\.php$ - [L]
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule . /index.php [L]
          '@
          Set-Content -Path 'wp-config.php' -Value @'
          <?php
          if ( $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https' ) {
            $_SERVER['HTTPS'] = 'on';
          }
          if ( ! defined( 'ABSPATH' ) ) {
              define( 'ABSPATH', __DIR__ . '/' );
          }
          define( 'DB_DIR', ABSPATH . 'wp-content/contents/databases/' );
          define( 'DB_FILE', '.ht.sqlite' );
          $table_prefix = 'wp_';
          // Generate these keys and salts from https://api.wordpress.org/secret-key/1.1/salt/
          define( 'AUTH_KEY',         getenv( 'AUTH_KEY' ) );
          define( 'SECURE_AUTH_KEY',  getenv( 'SECURE_AUTH_KEY' ) );
          define( 'LOGGED_IN_KEY',    getenv( 'LOGGED_IN_KEY' ) );
          define( 'NONCE_KEY',        getenv( 'NONCE_KEY' ) );
          define( 'AUTH_SALT',        getenv( 'AUTH_SALT' ) );
          define( 'SECURE_AUTH_SALT', getenv( 'SECURE_AUTH_SALT' ) );
          define( 'LOGGED_IN_SALT',   getenv( 'LOGGED_IN_SALT' ) );
          define( 'NONCE_SALT',       getenv( 'NONCE_SALT' ) );
          define( 'AUTOMATIC_UPDATER_DISABLED', true );
          define( 'DISABLE_WP_CRON', true );
          define( 'WP_DEBUG', false );
          define( 'DISALLOW_FILE_EDIT', true );
          define( 'DISALLOW_FILE_MODS', true );
          define( 'WP_POST_REVISIONS', false );
          define( 'UPLOADS', 'wp-content/contents/uploads' );
          require_once ABSPATH . 'wp-settings.php';
          '@
          Set-Location -Path 'wp-content'
          $wordpressSqlite = Invoke-RestMethod -Uri 'https://api.github.com/repos/aaemnnosttv/wp-sqlite-db'
          Invoke-WebRequest -OutFile 'db.php' -Uri "https://raw.githubusercontent.com/aaemnnosttv/wp-sqlite-db/$($wordpressSqlite.default_branch)/src/db.php"
          Set-Location -Path 'themes'
          foreach ($t in $extensions.themes.Split(' ')) {
              $theme = Invoke-RestMethod -ErrorAction 'SilentlyContinue' -Uri "https://api.wordpress.org/themes/info/1.1/?action=theme_information&request[slug]=$($t)"
              Invoke-WebRequest -ErrorAction 'SilentlyContinue' -OutFile "/tmp/theme-$($j).zip" -Uri $theme.download_link
              Expand-Archive -ErrorAction 'SilentlyContinue' -DestinationPath '.' -Path "/tmp/theme-$($j).zip"
          }
          Set-Location -Path '..'
          Set-Location -Path 'plugins'
          foreach ($p in $extensions.plugins.Split(' ')) {
              $extension = Invoke-RestMethod -ErrorAction 'SilentlyContinue' -Uri "https://api.wordpress.org/plugins/info/1.0/$($p).json"
              Invoke-WebRequest -ErrorAction 'SilentlyContinue' -OutFile "/tmp/plugin-$($p).zip" -Uri $($extension.versions.PSObject.Properties | Select-Object -Last 1 -Skip 1).Value
              Expand-Archive -ErrorAction 'SilentlyContinue' -DestinationPath '.' -Path "/tmp/plugin-$($p).zip"
          }
          Set-Location -Path '..'
      - name: Get Flyctl config
        env:
          FLY_CONFIG: ${{ secrets.FLY_CONFIG }}
        run: base64 -d <<< "$FLY_CONFIG" > fly.toml
      - name: Publish service
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy
